(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[23],{M6tC:function(e,s,t){"use strict";t.r(s);var n,a=function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",[t("q-toolbar",{attrs:{color:"faded"}},[t("q-toolbar-title",[e._v("\n\t\t\t\tSeason / Cycle\n\t\t\t\t")]),e.isEventEmpty?t("q-btn",{attrs:{color:"primary",icon:"create",label:"New Season/Cycle"},on:{click:function(s){e.seasonModal(!0)}}}):e._e()],1),t("div",{staticClass:"row"},[t("div",{staticClass:"col q-ma-md"},[t("q-table",{attrs:{data:e.events,loading:e.tableLoading,columns:e.eventColumns,pagination:e.eventPagination,separator:"cell","no-data-label":"Empty Events","row-key":"eventCode"},on:{"update:pagination":function(s){e.eventPagination=s}},scopedSlots:e._u([{key:"body-cell-seasonName",fn:function(s){return t("q-td",{attrs:{props:s}},[e._v("\n          "+e._s(e.getSeasonName(s))+"\n          ")])}},{key:"body-cell-seasonStart",fn:function(s){return t("q-td",{attrs:{props:s}},[e._v("\n          "+e._s(e.getSeasonStart(s))+"\n          ")])}},{key:"body-cell-seasonEnd",fn:function(s){return t("q-td",{attrs:{props:s}},[e._v("\n          "+e._s(e.getSeasonEnd(s))+"\n          ")])}},{key:"body-cell-status",fn:function(s){return t("q-td",{attrs:{props:s}},[e._v("\n          "+e._s(e.getSeasonStatus(s))+"\n          ")])}},{key:"body-cell-actions",fn:function(s){return t("q-td",{attrs:{props:s}},[e.isReady(s.row)?t("q-btn",{attrs:{color:"positive",icon:"launch"},on:{click:function(t){e.launchSeason(s)}}}):e._e(),e.noSeason(s)?t("q-btn",{attrs:{icon:"edit"},on:{click:function(t){e.showEditSeason(s)}}}):e._e(),e.isOngoing(s.row)?t("q-btn",{attrs:{color:"negative",icon:"cancel"},on:{click:function(t){e.cancelSeason(s.row)}}}):e._e()],1)}}])})],1)]),t("q-modal",{attrs:{"content-css":{minWidth:"50vw",minHeight:"20vh"}},on:{hide:e.clearSeasonModal},model:{value:e.getSeasonModal,callback:function(s){e.getSeasonModal=s},expression:"getSeasonModal"}},[t("q-modal-layout",{attrs:{"content-class":"{'bg-primary': isPrimary}"}},[t("q-toolbar",{attrs:{slot:"header"},slot:"header"},[t("q-toolbar-title",[e._v("\n\t\t\t\t\t\t\t"+e._s(e.isEdit?"Edit Season":"New Season")+"\n\t\t\t\t\t\t")]),t("q-btn",{attrs:{flat:"",round:"",dense:"",icon:"close"},on:{click:function(s){e.seasonModal(!1)}}})],1),t("div",{staticClass:"content-class"},[t("q-select",{staticClass:"textbox",attrs:{disable:e.isEdit,"float-label":"Event Name",options:e.emptySeason},model:{value:e.season.eventKey,callback:function(s){e.$set(e.season,"eventKey",s)},expression:"season.eventKey"}}),t("q-input",{staticClass:"row textbox",attrs:{readonly:"","numeric-keyboard-toggle":"",type:"number","stack-label":"Season Number"},model:{value:e.getLatestSeason,callback:function(s){e.getLatestSeason=s},expression:"getLatestSeason"}}),t("q-input",{staticClass:"row textbox",attrs:{disable:e.isStandby,"numeric-keyboard-toggle":"",type:"number","stack-label":"Ticket Count"},on:{click:e.isTicketCount},model:{value:e.season.ticketCount,callback:function(s){e.$set(e.season,"ticketCount",s)},expression:"season.ticketCount"}}),t("q-input",{staticClass:"row textbox",attrs:{disable:e.isStandby,"numeric-keyboard-toggle":"",type:"number","stack-label":"Ticket Price"},on:{click:e.isTicketPrice},model:{value:e.season.ticketPrice,callback:function(s){e.$set(e.season,"ticketPrice",s)},expression:"season.ticketPrice"}}),t("q-field",{attrs:{label:"Total Amount"}},[t("q-input",{staticClass:"row textbox",attrs:{disable:"",type:"text",prefix:"P "},model:{value:e.ticketAmount,callback:function(s){e.ticketAmount=s},expression:"ticketAmount"}})],1),this.isEdit?t("q-input",{staticClass:"row textbox",attrs:{readonly:"",type:"text","stack-label":"Status"},model:{value:e.season.status,callback:function(s){e.$set(e.season,"status",s)},expression:"season.status"}}):e._e()],1),e.isEdit?e._e():t("q-btn",{staticClass:"full-width textbox",attrs:{color:"primary",label:"Save"},on:{click:e.addNewSeason}}),e.isEdit?t("q-btn",{staticClass:"full-width textbox",attrs:{color:"secondary",label:"Update"},on:{click:e.updateSeason}}):e._e(),t("q-inner-loading",{attrs:{visible:e.getSeasonLoading}},[t("q-spinner",{attrs:{size:"50px",color:"primary"}})],1)],1)],1),t("q-page-container",[t("router-view")],1)],1)},o=[],i=t("lSNA"),r=t.n(i),l=(t("INYr"),t("a1Th"),t("pIFo"),t("91GP"),{mounted:function(){this.$bindAsArray("events",this.$database.ref("events")),this.$bindAsArray("finishedSeason",this.$database.ref("finished_season")),this.$bindAsArray("seasons",this.$database.ref("events").equalTo("seasons")),this.checkSeasonEnd},watch:{events:function(e){this.checkSeasonEnd}},computed:{checkSeasonEnd:function(){var e=[];try{for(var s=0;s<this.events.length;s++){var t=Object.assign([],this.events[s].seasons[0]);"undefined"!=typeof t&&t.seasonStart&&t.seasonEnd&&"ongoing"===t.status&&e.push(Object.assign({},t))}}catch(e){}console.log("seasons",e);for(var n=new Date,a=[],o=0;o<e.length;o++){var i=new Date(e[o].seasonEnd),r=this.$mathMixin.dayDiff(n,i);console.log("el",r),r<=0&&(console.log("found near end"),a.push(e[o]))}console.log("seasontoend",a);for(var l=0;l<a.length;l++){a[l].status="finished",a[l].numOfParticipants=0,a[l].numOfInquiries=0,a[l].participants="arrays here",a[l].sales=2e4;var c=this.$lodash.filter(this.events,function(e){return e[".key"]===a[l].eventKey});delete c[0].seasons[0],this.$store.dispatch("users/finishedSeason",{payload:a[l],fireb:this.$firebase.database(),quasu:this.$q}),this.$store.dispatch("users/addNewSeason",{payload:c[0],fireb:this.$firebase.database(),quasu:this.$q})}},ticketAmount:function(){try{var e=parseFloat(this.season.ticketCount)*parseFloat(this.season.ticketPrice),s=parseInt(e)||0;return s.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}catch(e){return 0}},isEventEmpty:function(){var e=this.$lodash.findIndex(this.events,function(e){var s=e.seasons;return"undefined"===typeof s});return-1!=e},emptySeason:function(){if(this.isEdit){var e=this.$lodash.map(this.events,function(e){return{label:e.eventName,value:e[".key"]}});return e}var s=this.$lodash.filter(this.events,function(e){var s=e.seasons;return"undefined"===typeof s}),t=this.$lodash.map(s,function(e){return{label:e.eventName,value:e[".key"]}});return t},allSeasons:function(){var e=this,s=[];try{this.events[0].seasons,this.$lodash.map(this.events,function(t){var n=t.seasons;if("undefined"!=typeof n){for(var a=[],o=0;o<n.length;o++)a.push(t.seasons[o]);e.$lodash.map(a,function(e){return s.push(e),s});return s}})}catch(e){}return s},getSeasonModal:{get:function(){return this.$store.getters["users/getSeasonModal"]},set:function(e){this.$store.commit("users/seasonModal",e)}},getSeasonLoading:function(){return this.$store.state.users.seasonLoading},getLatestSeason:function(){var e=this;if(""!=this.season.eventKey){console.log("finished",this.finishedSeason);var s=this.$lodash.filter(this.finishedSeason,function(s){return s.eventKey===e.season.eventKey});if(console.log("seasons",s),0!=s.length){var t=this.$lodash.map(s,function(e){return e.seasonNumber}),n=Math.max.apply(null,t);return++n}return 1}return 0}},data:function(){return{events:[],event:[],seasons:[],finishedSeason:[],season:{eventKey:"",eventName:"",seasonName:"",seasonNumber:0,ticketCount:0,ticketPrice:0,totalAmount:0,status:"standby"},statusOption:[{label:"Standby",value:"standby"},{label:"Ongoing",value:"ongoing"},{label:"Cancelled",value:"Cancelled"}],isEdit:!1,isStandby:!1,loading:!1,filter:"",tableLoading:!1,eventColumns:[{name:"eventCode",required:!0,label:"Code",align:"left",field:"eventCode",sortable:!0},{name:"eventName",required:!0,label:"Name",align:"left",field:"eventName",sortable:!0},{name:"seasonName",required:!0,label:"Seasons",align:"left",field:"seasons",sortable:!0},{name:"seasonStart",required:!0,align:"left",label:"Start",sortable:!0,visible:!1},{name:"seasonEnd",required:!0,align:"left",label:"End",sortable:!0,visible:!1},{name:"status",required:!0,label:"Status",align:"left",sortable:!0},{name:"actions",required:!0,label:"Actions",align:"center",field:"name",sortable:!1}],columns:[{name:"season",required:!0,label:"Seasons",align:"left",field:"seasonName",sortable:!0},{name:"seasonStart",required:!0,align:"left",label:"Start",field:"seasonStart",sortable:!0,visible:!1},{name:"seasonEnd",required:!0,align:"left",label:"End",field:"seasonEnd",sortable:!0,visible:!1},{name:"status",required:!0,label:"Status",align:"left",field:"status",sortable:!0},{name:"actions",required:!0,label:"Actions",align:"center",field:"name",sortable:!1}],pagination:{sortBy:null,descending:!1,page:1,rowsPerPage:10},eventPagination:{sortBy:null,descending:!1,page:1,rowsPerPage:10}}},methods:(n={getSeasonStart:function(e){var s=new Date(e.row.seasonStart);return"undefined"===typeof e.row.seasonStart?"Not Set":this.$moment(s).format("ll")},getSeasonEnd:function(e){var s=new Date(e.row.seasonEnd);return"undefined"===typeof e.row.seasonEnd?"Not Set":this.$moment(s).format("ll")},getSeasonName:function(e){try{var s=Object.assign([],e.row.seasons);return s[0].seasonName}catch(e){return"no season yet"}}},r()(n,"getSeasonStart",function(e){try{var s=Object.assign([],e.row.seasons),t=new Date(s[0].seasonStart);return"undefined"===typeof s[0].seasonStart?"Not Set":this.$moment(t).format("ll")}catch(e){}}),r()(n,"getSeasonEnd",function(e){try{var s=Object.assign([],e.row.seasons),t=new Date(s[0].seasonEnd);return"undefined"===typeof s[0].seasonEnd?"Not Set":this.$moment(t).format("ll")}catch(e){}}),r()(n,"getSeasonStatus",function(e){try{var s=Object.assign([],e.row.seasons);return s[0].status}catch(e){}}),r()(n,"noSeason",function(e){return"undefined"!==typeof e.row.seasons&&"ongoing"!==e.row.seasons[0].status}),r()(n,"isReady",function(e){try{return!("standby"!==e.seasons[0].status||!e.seasons[0].seasonStart||!e.seasons[0].seasonEnd)}catch(e){return!1}}),r()(n,"isOngoing",function(e){try{return"ongoing"===e.seasons[0].status}catch(e){}}),r()(n,"isTicketCount",function(){"standby"===this.season.status?(this.season.ticketCount="",this.isStandby=!1):this.isStandby=!0}),r()(n,"isTicketPrice",function(){"standby"===this.season.status?(this.season.ticketPrice="",this.isStandby=!1):this.isStandby=!0}),r()(n,"seasonModal",function(e){try{if(!1===this.isEdit){var s=this.event.seasons;this.isStandby=!0,this.season.eventName=this.event.eventName,this.season.seasonNumber=this.event.seasons[s.length-1].seasonNumber+1}this.$store.dispatch("users/updateSeasonModal",e)}catch(s){this.season.eventName=this.event.eventName,this.season.seasonNumber=1,this.$store.dispatch("users/updateSeasonModal",e)}}),r()(n,"clearSeasonModal",function(){this.season.eventKey="",this.season.eventName="",this.season.seasonName="",this.season.seasonNumber=0,this.season.ticketCount=0,this.season.ticketPrice=0,this.season.status="standby",this.isEdit=!1,this.$bindAsArray("events",this.$database.ref("events"))}),r()(n,"showSeason",function(e){this.event=e,this.getLatestSeason?this.$store.commit("users/updateIsEventEmpty",!1):this.$store.commit("users/updateIsEventEmpty",!0),this.filter=this.event.eventName}),r()(n,"launchSeason",function(e){var s=this;this.season=Object.assign({},e.row.seasons[0]),console.log("this.season",this.season),this.filter=this.season.eventName;var t=this.$lodash.filter(this.events,function(e){return e[".key"]===s.season.eventKey});t[0].seasons[0].status="ongoing",console.log("events",t[0]),this.$store.dispatch("users/addNewSeason",{payload:t[0],fireb:this.$firebase.database(),quasu:this.$q})}),r()(n,"showEditSeason",function(e){this.season=Object.assign({},e.row.seasons[0]),console.log("this.season",this.season),this.filter=this.season.eventName,console.log("this.eventname",this.event),this.isEdit=!0,"standby"===this.season.status&&(this.isStandby=!1),this.$forceUpdate(),this.$store.dispatch("users/updateSeasonModal",!0)}),r()(n,"addNewSeason",function(){var e=this;if(this.season.seasonNumber<=1){var s=this.$lodash.filter(this.events,function(s){return s[".key"]===e.season.eventKey});this.event=s[0],this.season.eventName=s[0].eventName,this.season.seasonNumber=this.getLatestSeason,this.season.seasonName="".concat(s[0].eventCode,"_Season").concat(this.season.seasonNumber),this.season.totalAmount=parseFloat(this.season.ticketCount)*parseFloat(this.season.ticketPrice),console.log("season",this.season),console.log("event",this.event),this.event.seasons=[],this.event.seasons.push(this.season),console.log("less than 0")}else{var t=this.$lodash.filter(this.events,function(s){return s[".key"]===e.season.eventKey}),n=t[0],a=this.season;console.log("currentEvent",n),console.log("currentSeason",a);var o={seasonName:"".concat(this.event.eventCode,"_S").concat(a.seasonNumber),ticketCount:a.ticketCount,ticketPrice:a.ticketPrice,totalAmount:parseFloat(a.ticketCount)*parseFloat(a.ticketPrice),seasonNumber:a.seasonNumber,status:"standby",eventKey:this.event[".key"],eventName:this.event.eventName};console.log("present season",o),this.event.seasons.push(o)}console.log("event to update",this.event),this.$store.dispatch("users/addNewSeason",{payload:this.event,fireb:this.$firebase.database(),quasu:this.$q})}),r()(n,"updateSeason",function(){var e=this,s=this.$lodash.findIndex(this.events,function(s){return s[".key"]===e.season.eventKey}),t=this.$lodash.findIndex(this.events[s].seasons,function(s){return s.seasonName===e.season.seasonName});console.log("events",this.events[s]),console.log("season to update",this.season),console.log("seasons",this.events[s].seasons[t]),this.$store.dispatch("users/updateSeason",{payload:this.season,seasonNumber:t,fireb:this.$firebase.database(),quasu:this.$q})}),r()(n,"cancelSeason",function(e){var s=this;this.$q.dialog({title:"Cancel Season Confirmation",message:"Do you want to cancel ".concat(e.seasons[0].seasonName,"?"),ok:"Yes",cancel:"No"}).then(function(){console.log("events",e),s.season=Object.assign({},e.seasons[0]),console.log("this.season",s.season),s.filter=s.season.eventName;var t=s.$lodash.filter(s.events,function(e){return e[".key"]===s.season.eventKey});t[0].seasons[0].status="standby",console.log("events",t[0]),s.$store.dispatch("users/addNewSeason",{payload:t[0],fireb:s.$firebase.database(),quasu:s.$q})}).catch(function(){})}),r()(n,"testEndSeason",function(e){var s={seasonName:"BFF_Season1",ticketCount:65,ticketPrice:65,totalAmount:4225,seasonNumber:1,status:"finished",eventKey:"-LJlVFp-JcNcrdfLovvx",eventName:"Baby Fashion Festival",seasonStart:"Mon Aug 27 2018 00:00:00 GMT+0800 (Taipei Standard Time)",seasonEnd:"Mon Sept 27 2018 00:00:00 GMT+0800 (Taipei Standard Time)",numOfParticipants:40,numOfInquiries:300,numOfOrientation:80,participants:[],sales:2e6};this.$database.ref("finished_season").push(s)}),n)}),c=l,u=(t("yRPp"),t("KHd+")),d=Object(u["a"])(c,a,o,!1,null,null,null);s["default"]=d.exports},mRxV:function(e,s,t){},yRPp:function(e,s,t){"use strict";var n=t("mRxV"),a=t.n(n);a.a}}]);